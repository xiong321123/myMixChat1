import { AxiosInstance } from 'axios';
import { GhostKey, GhostKeyRequest, OutputFetchRequest, OutputsRequest, SafeOutputsRequest, SafeBalanceRequest, SafeUtxoOutput, TransactionRequest, SequencerTransactionRequest, UtxoOutput } from './types';
export declare const UtxoKeystoreClient: (axiosInstance: AxiosInstance) => {
    outputs: (params: OutputsRequest) => Promise<UtxoOutput[]>;
    /**
     * Utxos of current user will be returned, if members and threshold are not provided.
     */
    safeOutputs: (params: SafeOutputsRequest) => Promise<SafeUtxoOutput[]>;
    safeAssetBalance: (params: SafeBalanceRequest) => Promise<string>;
    fetchSafeOutputs: (params: OutputFetchRequest) => Promise<UtxoOutput[]>;
    fetchTransaction: (transactionId: string) => Promise<SequencerTransactionRequest>;
    verifyTransaction: (params: TransactionRequest[]) => Promise<SequencerTransactionRequest[]>;
    sendTransactions: (params: TransactionRequest[]) => Promise<SequencerTransactionRequest[]>;
    /**
     * Get one-time information to transfer assets to single user or multisigs group, not required for Mixin Kernel Address
     * index in GhostKeyRequest MUST be the same with the index of corresponding output
     * receivers will be sorted in the function
     */
    ghostKey: (params: GhostKeyRequest[]) => Promise<GhostKey[]>;
};
export declare const UtxoClient: import("./types").BaseClient<{
    outputs: (params: OutputsRequest) => Promise<UtxoOutput[]>;
    /**
     * Utxos of current user will be returned, if members and threshold are not provided.
     */
    safeOutputs: (params: SafeOutputsRequest) => Promise<SafeUtxoOutput[]>;
    safeAssetBalance: (params: SafeBalanceRequest) => Promise<string>;
    fetchSafeOutputs: (params: OutputFetchRequest) => Promise<UtxoOutput[]>;
    fetchTransaction: (transactionId: string) => Promise<SequencerTransactionRequest>;
    verifyTransaction: (params: TransactionRequest[]) => Promise<SequencerTransactionRequest[]>;
    sendTransactions: (params: TransactionRequest[]) => Promise<SequencerTransactionRequest[]>;
    /**
     * Get one-time information to transfer assets to single user or multisigs group, not required for Mixin Kernel Address
     * index in GhostKeyRequest MUST be the same with the index of corresponding output
     * receivers will be sorted in the function
     */
    ghostKey: (params: GhostKeyRequest[]) => Promise<GhostKey[]>;
}>;
export default UtxoClient;
