import { AxiosInstance } from 'axios';
import Keystore from './types/keystore';
import { AuthenticationUserResponse } from './types/user';
/**
 * Methods to verify or update pin with keystore
 * Note:
 * * If you forget your PIN, there is no way to retrieve or restore it
 * Docs: https://developers.mixin.one/docs/api/pin/pin-update
 */
export declare const PinKeystoreClient: (axiosInstance: AxiosInstance, keystore: Keystore | undefined) => {
    /** Verify a user's PIN, the iterator of the pin will increment also */
    verify: (pin: string) => Promise<AuthenticationUserResponse>;
    verifyTipPin: (pin: string) => Promise<AuthenticationUserResponse>;
    /** Change the PIN of the user, or setup a new PIN if it is not set yet */
    update: (firstPin: string, secondPin?: string) => Promise<AuthenticationUserResponse>;
    updateTipPin: (firstPin: string, secondPin: string, counter: number) => Promise<AuthenticationUserResponse>;
};
export declare const PinClient: import("./types").BaseClient<{
    /** Verify a user's PIN, the iterator of the pin will increment also */
    verify: (pin: string) => Promise<AuthenticationUserResponse>;
    verifyTipPin: (pin: string) => Promise<AuthenticationUserResponse>;
    /** Change the PIN of the user, or setup a new PIN if it is not set yet */
    update: (firstPin: string, secondPin?: string) => Promise<AuthenticationUserResponse>;
    updateTipPin: (firstPin: string, secondPin: string, counter: number) => Promise<AuthenticationUserResponse>;
}>;
export default PinClient;
